▷ DOM (Document Object Model)
	웹 브라우저에 표시되는 HTML 문서 구조를 객체화한 모델 구조.
	DOM은 자료구조 중의 하나인 트리구조를 가진다.

	하나하나의 요소를 요소 노드라고 부르며, 각 노드는 부모, 자식, 형제 관계가 형성된다.
	[ 요소 노드 말고도 문서, 속성, 텍스트, 주석 노드가 있다. ]

▶ 속성으로 노드 선택하기
	모든 노드 탐색
	1) parentNode
	2) childNodes
	3) firstChild
	4) lastChild
	5) previousSibling
	6) nextSibling

	요소 노드 탐색
	1) parentElement : 부모 요소 노드 반환
	2) children : 자식 요소 노드를 반환
	3) firstElementChild : 첫 번째 자식 요소 노드 반환
	4) lastElementChild : 마지막 자식 요소 노드 반환
	5) previousElementSibling : 이전 요소 노드 반환
	6) nextElementSibling : 다음 요소 노드 반환

▶ 메소드로 노드 선택하기
	속성을 이용하여 노드의 자식으로 내려가면서 원하는 노드를 선택할 수 있다.
	하지만 DOM 트리가 복잡할수록 원하는 노드 선택도 어렵기 때문에
	일반적으로 요소 노드를 바로 찾아갈 수 있는 메소드를 이용한 노드 선택 방법과 조합하여 사용한다.

	1) get 메소드
	- getElementById(값) : id 속성값과 일치하는 요소 하나 선택
	- getElementsByClassName(값) : class 속성값과 일치하는 요소 모두 선택
	- getElementsByTagName(태그명) : 해당 태그와 일치하는 요소 모두 선택

	2) query 메소드 (CSS 선택자를 전달받아 노드 선택)
	- querySelector(선택자) : CSS 선택자에 해당하는 노드 하나만 선택
	- querySelectorAll(선택자) : CSS 선택자에 해당하는 노드 모두 선택

▷ 자바스크립트에서 노드 조작하기 (가져온 노드 조작)
	
	1) 콘텐츠 조작
	- textContent : 요소 노드의 모든 텍스트에 접근
	- innerText : 웹 브라우저에 표시되는 텍스트에만 접근
	- innerHTML : 선택된 노드의 콘텐츠 부분에 접근

	2) 스타일 조작
		문법 -> 노드.style.속성 = 값;

		※ 하지만, 스타일 조작은 스타일을 다 적어줘야 하기에 불편할 때가 있다.

	3) 클래스 속성 조작
		문법
		1) 노드.classList.add('값', '값2');
		2) 노드.classList.remove('값');
		3) 노드.classList.toggle('값'); // 추가, 삭제 반복

	4) 속성 조작
		문법
		1) 노드.getAttribute(속성명) : 속성값 가져옴
		2) 노드.setAttribute(속성명, 값) : 속성값 설정
		3) 노드.removeAttribute(속성명) : 속성 삭제

▷ 노드 추가/삭제 하기
	새로운 요소를 HTML 문서에 추가하기 위해서는 먼저 새로운 노드를 생성하고
	생성한 노드를 기존 DOM 트리 노드와 연결하는 작업을 해야한다.
	
	- 노드 생성
		document.createElement() : 요소 노드 생성

	- 노드 연결
		기준노드.appendChild(자식노드) : 기준 노드에 자식 노드를 연결

	- 노드 삭제
		기준노드.removeChild(노드)

	
















